> Authors: Kaleb Luse and Ethan Morisette
> Files:
    > fat32.img             -> the file system image we are using our utility on
    > fat32_reader.c        -> the program to run our file system utility (MAIN PROGRAM)
    > boot_sector.h         -> declares functions and data structures associated with the boot sector data structure
    > boot_sector.c         -> c file for boot_sector.h
    > directory_entries.h   -> declares functions and data structures associated with the directory entry data structure
    > directory_entries.c   -> c file for directory_entries.h
    > equations.h           -> declares all equations to be used by our system
    > equations.c           -> c file for equations.h
    > fat_entries.h         -> declares functions for dealing with entries in the fat region of the system image
    > fat_entries.c         -> c file for fat_entries.h
> Instructions to run and compile
    1. cd into directory containing all files listed above
    2. run the command "gcc -o fat32_reader fat32_reader.c boot_sector.c directory_entries.c equations.c fat_entries.c" to compile
    3. run the program by typing "./fat_reader"
	* ALTERNATIVELY, you can run the "run_and_compile.sh" shell script by entering "./run_and_compile"
> Challenges
    > Our biggest challenges resided in the implementation of ls because it we were getting results we didn't expect. Hexedit did help, but we still had a hard time figuring out why certain things are compiling. The discussion on class on Monday about directory entries with long names, helped us to understand why this is happenening and what we need to do to handle it.
    
